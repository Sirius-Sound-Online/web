generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  name             String?
  email            String?  @unique
  emailVerified    DateTime?
  image            String?
  role             String   @default("member")
  waitlistPosition Int?
  accounts         Account[]
  sessions         Session[]
  waitlistEntries  WaitlistEntry[]
  orders           Order[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model WaitlistEntry {
  id                String   @id @default(cuid())
  email             String
  role              String
  consent           Boolean
  status            String   @default("pending")
  confirmationToken String   @unique
  user              User?    @relation(fields: [userId], references: [id])
  userId            String?
  referralCode      String?
  createdAt         DateTime @default(now())
}

model Order {
  id              String   @id @default(cuid())
  type            String
  stripeSessionId String   @unique
  stripeIntentId  String?
  amount          Int
  currency        String   @default("usd")
  status          String   @default("authorized")
  user            User?    @relation(fields: [userId], references: [id])
  userId          String?
  metadata        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
